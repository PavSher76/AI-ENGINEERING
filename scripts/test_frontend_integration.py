#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ frontend —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
"""

import requests
import json
import sys
from typing import Dict, Any

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
FRONTEND_URL = "http://localhost:3000"
CHAT_SERVICE_URL = "http://localhost/api/chat"
NGINX_URL = "http://localhost"

def test_nginx_proxy():
    """–¢–µ—Å—Ç nginx –ø—Ä–æ–∫—Å–∏"""
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ nginx –ø—Ä–æ–∫—Å–∏...")
    
    try:
        response = requests.get(f"{NGINX_URL}/api/chat/health")
        if response.status_code == 200:
            print("‚úÖ Nginx –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå Nginx –ø—Ä–æ–∫—Å–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ nginx –ø—Ä–æ–∫—Å–∏: {e}")
        return False

def test_cors_headers():
    """–¢–µ—Å—Ç CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç preflight –∑–∞–ø—Ä–æ—Å–∞
        response = requests.options(
            f"{NGINX_URL}/api/chat/settings/llm",
            headers={
                "Origin": "http://localhost:3000",
                "Access-Control-Request-Method": "GET",
                "Access-Control-Request-Headers": "authorization"
            }
        )
        
        if response.status_code == 204:
            cors_headers = {
                "Access-Control-Allow-Origin": response.headers.get("Access-Control-Allow-Origin"),
                "Access-Control-Allow-Methods": response.headers.get("Access-Control-Allow-Methods"),
                "Access-Control-Allow-Headers": response.headers.get("Access-Control-Allow-Headers"),
                "Access-Control-Allow-Credentials": response.headers.get("Access-Control-Allow-Credentials")
            }
            
            print("‚úÖ CORS preflight –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   Allow-Origin: {cors_headers['Access-Control-Allow-Origin']}")
            print(f"   Allow-Methods: {cors_headers['Access-Control-Allow-Methods']}")
            print(f"   Allow-Headers: {cors_headers['Access-Control-Allow-Headers']}")
            print(f"   Allow-Credentials: {cors_headers['Access-Control-Allow-Credentials']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            if cors_headers['Access-Control-Allow-Origin'] and ',' in cors_headers['Access-Control-Allow-Origin']:
                print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ CORS –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤")
                return False
            
            return True
        else:
            print(f"‚ùå CORS preflight –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ CORS —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_chat_service_endpoints():
    """–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ chat-service"""
    print("üí¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ chat-service...")
    
    endpoints = [
        ("/health", "GET"),
        ("/settings", "GET"),
        ("/settings/llm", "GET"),
        ("/settings/chat", "GET"),
        ("/settings/available", "GET"),
        ("/files/supported", "GET")
    ]
    
    results = []
    
    for endpoint, method in endpoints:
        try:
            if method == "GET":
                response = requests.get(f"{CHAT_SERVICE_URL}{endpoint}")
            else:
                response = requests.post(f"{CHAT_SERVICE_URL}{endpoint}")
            
            if response.status_code == 200:
                print(f"‚úÖ {method} {endpoint} - OK")
                results.append(True)
            else:
                print(f"‚ùå {method} {endpoint} - {response.status_code}")
                results.append(False)
                
        except Exception as e:
            print(f"‚ùå {method} {endpoint} - –û—à–∏–±–∫–∞: {e}")
            results.append(False)
    
    success_rate = sum(results) / len(results) * 100
    print(f"üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}% ({sum(results)}/{len(results)})")
    
    return success_rate >= 80

def test_chat_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —á–∞—Ç–∞...")
    
    try:
        # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        response = requests.post(
            f"{CHAT_SERVICE_URL}/chat",
            data={
                "message": "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ frontend —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π.",
                "session_id": "test-frontend-integration"
            }
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            print(f"   –û—Ç–≤–µ—Ç: {result.get('response', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')[:100]}...")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∞—Ç–∞: {e}")
        return False

def test_settings_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"""
    print("‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º...")
    
    try:
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ LLM
        response = requests.get(f"{CHAT_SERVICE_URL}/settings/llm")
        if response.status_code == 200:
            settings = response.json()
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ LLM –ø–æ–ª—É—á–µ–Ω—ã")
            print(f"   –ú–æ–¥–µ–ª—å: {settings.get('model', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
            print(f"   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {settings.get('temperature', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ LLM. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
        response = requests.get(f"{CHAT_SERVICE_URL}/settings/chat")
        if response.status_code == 200:
            settings = response.json()
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã")
            print(f"   –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤: {settings.get('max_tokens', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π
        response = requests.get(f"{CHAT_SERVICE_URL}/settings/available")
        if response.status_code == 200:
            options = response.json()
            print("‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã")
            print(f"   –ú–æ–¥–µ–ª–∏: {len(options.get('models', []))}")
            print(f"   –Ø–∑—ã–∫–∏: {len(options.get('languages', []))}")
            print(f"   –§–æ—Ä–º–∞—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞: {len(options.get('export_formats', []))}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def test_frontend_connectivity():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ frontend"""
    print("üñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ frontend...")
    
    try:
        response = requests.get(FRONTEND_URL, timeout=5)
        if response.status_code == 200:
            print("‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        else:
            print(f"‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            return False
    except requests.exceptions.Timeout:
        print("‚è∞ Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (—Ç–∞–π–º–∞—É—Ç)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ frontend: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ frontend —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
    print("=" * 60)
    
    tests = [
        ("Nginx –ø—Ä–æ–∫—Å–∏", test_nginx_proxy),
        ("CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏", test_cors_headers),
        ("–≠–Ω–¥–ø–æ–∏–Ω—Ç—ã chat-service", test_chat_service_endpoints),
        ("–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —á–∞—Ç–∞", test_chat_functionality),
        ("–î–æ—Å—Ç—É–ø –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", test_settings_access),
        ("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ frontend", test_frontend_connectivity)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        print(f"\nüìã {test_name}:")
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("=" * 60)
    
    passed = 0
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{status} - {test_name}")
        if result:
            passed += 1
    
    print(f"\nüìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ ({passed/total*100:.1f}%)")
    
    if passed == total:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è frontend —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("‚úÖ Chat-service –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ nginx")
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫")
    elif passed >= total * 0.8:
        print("\n‚ö†Ô∏è –ë–û–õ–¨–®–ò–ù–°–¢–í–û –¢–ï–°–¢–û–í –ü–†–û–ô–î–ï–ù–û")
        print("‚úÖ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫")
        sys.exit(1)
    
    print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É frontend –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ API –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ—Ö–æ–¥—è—Ç —É—Å–ø–µ—à–Ω–æ")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
    print("4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Keycloak –¥–ª—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

if __name__ == "__main__":
    main()
