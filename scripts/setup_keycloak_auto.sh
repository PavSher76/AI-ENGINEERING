#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Keycloak –¥–ª—è AI Engineering Platform

echo "üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Keycloak"
echo "======================================"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Keycloak –∑–∞–ø—É—â–µ–Ω
echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Keycloak..."
if ! curl -s -f http://localhost:8080/realms/master > /dev/null 2>&1; then
    echo "‚ùå Keycloak –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:"
    echo "   docker-compose up -d keycloak"
    echo ""
    exit 1
fi

echo "‚úÖ Keycloak –¥–æ—Å—Ç—É–ø–µ–Ω"
echo ""

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
echo "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
ADMIN_TOKEN=$(curl -s -X POST \
  http://localhost:8080/realms/master/protocol/openid-connect/token \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "username=admin" \
  -d "password=admin" \
  -d "grant_type=password" \
  -d "client_id=admin-cli" | \
  python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])" 2>/dev/null)

if [ -z "$ADMIN_TOKEN" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    echo "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ Keycloak –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

echo "‚úÖ –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω"
echo ""

# –°–æ–∑–¥–∞–µ–º realm ai-engineering
echo "üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ realm 'ai-engineering'..."
REALM_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null \
  -X POST \
  http://localhost:8080/admin/realms \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "realm": "ai-engineering",
    "enabled": true,
    "displayName": "AI Engineering Platform",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>AI Engineering</span></div>",
    "loginTheme": "keycloak",
    "accountTheme": "keycloak",
    "adminTheme": "keycloak",
    "emailTheme": "keycloak",
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "internationalizationEnabled": true,
    "supportedLocales": ["en", "ru"],
    "defaultLocale": "ru",
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5
  }')

if [ "$REALM_RESPONSE" = "201" ]; then
    echo "‚úÖ Realm 'ai-engineering' —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ö†Ô∏è Realm 'ai-engineering' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∫–æ–¥: $REALM_RESPONSE)"
fi

echo ""

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ ai-frontend
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ 'ai-frontend'..."
CLIENT_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null \
  -X POST \
  http://localhost:8080/admin/realms/ai-engineering/clients \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "clientId": "ai-frontend",
    "enabled": true,
    "publicClient": true,
    "standardFlowEnabled": true,
    "implicitFlowEnabled": false,
    "directAccessGrantsEnabled": true,
    "serviceAccountsEnabled": false,
    "redirectUris": ["http://localhost:3000/*", "http://localhost:80/*"],
    "webOrigins": ["http://localhost:3000", "http://localhost:80"],
    "protocol": "openid-connect",
    "attributes": {
      "access.token.lifespan": "300",
      "client.session.idle.timeout": "0",
      "client.session.max.lifespan": "0",
      "pkce.code.challenge.method": "S256"
    }
  }')

if [ "$CLIENT_RESPONSE" = "201" ]; then
    echo "‚úÖ –ö–ª–∏–µ–Ω—Ç 'ai-frontend' —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç 'ai-frontend' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∫–æ–¥: $CLIENT_RESPONSE)"
fi

echo ""

# –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π..."
ROLES=("admin" "developer" "analyst" "viewer")

for role in "${ROLES[@]}"; do
    ROLE_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null \
      -X POST \
      http://localhost:8080/admin/realms/ai-engineering/roles \
      -H "Authorization: Bearer $ADMIN_TOKEN" \
      -H "Content-Type: application/json" \
      -d "{\"name\": \"$role\", \"description\": \"Role: $role\"}")
    
    if [ "$ROLE_RESPONSE" = "201" ]; then
        echo "‚úÖ –†–æ–ª—å '$role' —Å–æ–∑–¥–∞–Ω–∞"
    else
        echo "‚ö†Ô∏è –†–æ–ª—å '$role' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∫–æ–¥: $ROLE_RESPONSE)"
    fi
done

echo ""

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin
ADMIN_USER_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null \
  -X POST \
  http://localhost:8080/admin/realms/ai-engineering/users \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "username": "admin",
    "enabled": true,
    "firstName": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
    "lastName": "–°–∏—Å—Ç–µ–º—ã",
    "email": "admin@ai-engineering.local",
    "credentials": [{
      "type": "password",
      "value": "admin",
      "temporary": false
    }]
  }')

if [ "$ADMIN_USER_RESPONSE" = "201" ]; then
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —Å–æ–∑–¥–∞–Ω"
    
    # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å admin
    USER_ID=$(curl -s \
      http://localhost:8080/admin/realms/ai-engineering/users?username=admin \
      -H "Authorization: Bearer $ADMIN_TOKEN" | \
      python3 -c "import sys, json; print(json.load(sys.stdin)[0]['id'])" 2>/dev/null)
    
    if [ ! -z "$USER_ID" ]; then
        curl -s -X POST \
          http://localhost:8080/admin/realms/ai-engineering/users/$USER_ID/role-mappings/realm \
          -H "Authorization: Bearer $ADMIN_TOKEN" \
          -H "Content-Type: application/json" \
          -d '[{"id": "'$(curl -s http://localhost:8080/admin/realms/ai-engineering/roles/admin -H "Authorization: Bearer $ADMIN_TOKEN" | python3 -c "import sys, json; print(json.load(sys.stdin)['id'])" 2>/dev/null)'", "name": "admin"}]' > /dev/null
        echo "‚úÖ –†–æ–ª—å 'admin' –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 'admin'"
    fi
else
    echo "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∫–æ–¥: $ADMIN_USER_RESPONSE)"
fi

echo ""

echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Keycloak –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
echo "   ‚úÖ Realm: ai-engineering"
echo "   ‚úÖ Client: ai-frontend"
echo "   ‚úÖ –†–æ–ª–∏: admin, developer, analyst, viewer"
echo "   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: admin/admin"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–∫–æ–Ω—Å–æ–ª–∏: http://localhost:8080/admin"
echo "üîê –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin"
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
echo "   python3 scripts/test_auth.py"
echo ""
