#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Keycloak

echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Keycloak"
echo "================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Keycloak
wait_for_keycloak() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Keycloak..."
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if curl -k -s -o /dev/null -w "%{http_code}" "https://localhost:8080/realms/master" | grep -q "200"; then
            echo "‚úÖ Keycloak –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
            return 0
        fi
        
        echo "   –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        sleep 5
        ((attempt++))
    done
    
    echo "‚ùå Keycloak –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
get_admin_token() {
    echo "üîë –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    local token_response=$(curl -k -s -X POST "https://localhost:8080/realms/master/protocol/openid-connect/token" \
        -H "Content-Type: application/x-www-form-urlencoded" \
        -d "grant_type=password" \
        -d "client_id=admin-cli" \
        -d "username=admin" \
        -d "password=admin" 2>/dev/null)
    
    if echo "$token_response" | grep -q "access_token"; then
        local access_token=$(echo "$token_response" | grep -o '"access_token":"[^"]*"' | cut -d'"' -f4)
        echo "‚úÖ –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω"
        echo "$access_token"
        return 0
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        echo "   –û—Ç–≤–µ—Ç: $token_response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è realm
check_realm_exists() {
    local token=$1
    local realm_name="ai-engineering"
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è realm: $realm_name"
    
    local response=$(curl -k -s -H "Authorization: Bearer $token" \
        "https://localhost:8080/admin/realms/$realm_name" 2>/dev/null)
    
    if echo "$response" | grep -q '"realm"'; then
        echo "‚úÖ Realm $realm_name —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    else
        echo "‚ùå Realm $realm_name –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è realm
create_realm() {
    local token=$1
    local realm_name="ai-engineering"
    
    echo "üèóÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ realm: $realm_name"
    
    local realm_config='{
        "realm": "'$realm_name'",
        "displayName": "AI Engineering Platform",
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": true,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": true,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "defaultRoles": ["offline_access", "uma_authorization"],
        "requiredCredentials": ["password"],
        "passwordPolicy": "hashIterations(27500)"
    }'
    
    local response=$(curl -k -s -X POST \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d "$realm_config" \
        "https://localhost:8080/admin/realms" 2>/dev/null)
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Realm $realm_name —Å–æ–∑–¥–∞–Ω"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è realm: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞
create_client() {
    local token=$1
    local realm_name="ai-engineering"
    local client_id="ai-frontend"
    
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: $client_id"
    
    local client_config='{
        "clientId": "'$client_id'",
        "name": "AI Frontend Client",
        "enabled": true,
        "publicClient": true,
        "protocol": "openid-connect",
        "redirectUris": ["https://localhost:3000/*", "https://localhost/*"],
        "webOrigins": ["https://localhost:3000", "https://localhost"],
        "directAccessGrantsEnabled": true,
        "standardFlowEnabled": true,
        "fullScopeAllowed": true
    }'
    
    local response=$(curl -k -s -X POST \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d "$client_config" \
        "https://localhost:8080/admin/realms/$realm_name/clients" 2>/dev/null)
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ö–ª–∏–µ–Ω—Ç $client_id —Å–æ–∑–¥–∞–Ω"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–µ–π
create_roles() {
    local token=$1
    local realm_name="ai-engineering"
    
    echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–µ–π..."
    
    local roles=("admin" "developer" "analyst" "viewer")
    
    for role in "${roles[@]}"; do
        echo "   –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏: $role"
        
        local role_config='{
            "name": "'$role'",
            "description": "Role for '$role' users"
        }'
        
        local response=$(curl -k -s -X POST \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "$role_config" \
            "https://localhost:8080/admin/realms/$realm_name/roles" 2>/dev/null)
        
        if [ $? -eq 0 ]; then
            echo "   ‚úÖ –†–æ–ª—å $role —Å–æ–∑–¥–∞–Ω–∞"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏ $role: $response"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
create_test_users() {
    local token=$1
    local realm_name="ai-engineering"
    
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin
    echo "   –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: admin"
    local admin_user='{
        "username": "admin",
        "enabled": true,
        "emailVerified": true,
        "firstName": "Admin",
        "lastName": "User",
        "email": "admin@example.com",
        "credentials": [{
            "type": "password",
            "value": "admin",
            "temporary": false
        }]
    }'
    
    local admin_response=$(curl -k -s -X POST \
        -H "Authorization: Bearer $token" \
        -H "Content-Type: application/json" \
        -d "$admin_user" \
        "https://localhost:8080/admin/realms/$realm_name/users" 2>/dev/null)
    
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —Å–æ–∑–¥–∞–Ω"
        
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª–∏
        local user_id=$(curl -k -s -H "Authorization: Bearer $token" \
            "https://localhost:8080/admin/realms/$realm_name/users?username=admin" | \
            grep -o '"id":"[^"]*"' | cut -d'"' -f4 | head -1)
        
        if [ -n "$user_id" ]; then
            # –ù–∞–∑–Ω–∞—á–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏
            local roles=("admin" "developer" "analyst" "viewer")
            for role in "${roles[@]}"; do
                curl -k -s -X POST \
                    -H "Authorization: Bearer $token" \
                    "https://localhost:8080/admin/realms/$realm_name/users/$user_id/role-mappings/realm" \
                    -H "Content-Type: application/json" \
                    -d '[{"name":"'$role'","id":"'$role'"}]' >/dev/null 2>&1
            done
            echo "   ‚úÖ –†–æ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é admin"
        fi
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin: $admin_response"
    fi
    
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    local users=("developer:developer:Developer:User:developer@example.com:developer,analyst,viewer" 
                 "analyst:analyst:Analyst:User:analyst@example.com:analyst,viewer"
                 "viewer:viewer:Viewer:User:viewer@example.com:viewer")
    
    for user_info in "${users[@]}"; do
        IFS=':' read -r username password first_name last_name email roles <<< "$user_info"
        
        echo "   –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $username"
        
        local user_config='{
            "username": "'$username'",
            "enabled": true,
            "emailVerified": true,
            "firstName": "'$first_name'",
            "lastName": "'$last_name'",
            "email": "'$email'",
            "credentials": [{
                "type": "password",
                "value": "'$password'",
                "temporary": false
            }]
        }'
        
        local user_response=$(curl -k -s -X POST \
            -H "Authorization: Bearer $token" \
            -H "Content-Type: application/json" \
            -d "$user_config" \
            "https://localhost:8080/admin/realms/$realm_name/users" 2>/dev/null)
        
        if [ $? -eq 0 ]; then
            echo "   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $username —Å–æ–∑–¥–∞–Ω"
            
            # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª–∏
            IFS=',' read -ra USER_ROLES <<< "$roles"
            for role in "${USER_ROLES[@]}"; do
                curl -k -s -X POST \
                    -H "Authorization: Bearer $token" \
                    "https://localhost:8080/admin/realms/$realm_name/users?username=$username" | \
                    grep -o '"id":"[^"]*"' | cut -d'"' -f4 | head -1 | \
                    xargs -I {} curl -k -s -X POST \
                    -H "Authorization: Bearer $token" \
                    "https://localhost:8080/admin/realms/$realm_name/users/{}/role-mappings/realm" \
                    -H "Content-Type: application/json" \
                    -d '[{"name":"'$role'","id":"'$role'"}]' >/dev/null 2>&1
            done
            echo "   ‚úÖ –†–æ–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $username"
        else
            echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $username: $user_response"
        fi
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Keycloak
    if ! wait_for_keycloak; then
        exit 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    local admin_token=$(get_admin_token)
    if [ -z "$admin_token" ]; then
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ realm
    if ! check_realm_exists "$admin_token"; then
        # –°–æ–∑–¥–∞–µ–º realm
        if ! create_realm "$admin_token"; then
            exit 1
        fi
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    create_client "$admin_token"
    
    # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª–∏
    create_roles "$admin_token"
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    create_test_users "$admin_token"
    
    echo ""
    echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:"
    echo "   ‚Ä¢ Realm: ai-engineering"
    echo "   ‚Ä¢ Client: ai-frontend"
    echo "   ‚Ä¢ –†–æ–ª–∏: admin, developer, analyst, viewer"
    echo "   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: admin/admin, developer/developer, analyst/analyst, viewer/viewer"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    echo "   ‚Ä¢ Frontend: https://localhost"
    echo "   ‚Ä¢ Keycloak Admin: https://localhost:8080/admin"
    echo "   ‚Ä¢ Keycloak Realm: https://localhost:8080/realms/ai-engineering"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main
